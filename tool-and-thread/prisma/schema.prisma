// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  transactions  Transaction[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Transaction {
  id            Int      @id @default(autoincrement())
  receiptNumber String   @unique @default(uuid())
  buyerName     String
  currency      String   @default("USD")
  date          DateTime @default(now())
  items         Item[]
  total         Float   @default(0)
  userId        String
  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Item {
  id            Int      @id @default(autoincrement())
  name          String
  price         Float
  quantity      Int      @default(1)
  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  transactionId Int
}
